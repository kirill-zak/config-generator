---
name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY_IMAGE: kirillzak/rudderstack-config-generator

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout out the codebase
        uses: actions/checkout@v4

      - name: Test building image
        run: podman build -t rudderstack-config-generator:${{ github.ref_name }} .
      
      - name: Run the built image
        run: podman run --name test-container --detach --privileged rudderstack-config-generator:${{ github.ref_name }}

      - name: Verify config generator is accessible in the built image
        run: sleep 5 && podman exec --tty test-container env TERM=xterm wget --spider http://localhost:9000 > /dev/null 2>1

  tag:
    name: Release tags
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      packages: write
  
    steps:
      - name: Checkout out the codebase
        uses: actions/checkout@v4
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Add Qemu
        uses: docker/setup-qemu-action@v3

      - name: Add Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_REGISTRY_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},name-canonical=true
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ github.ref_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  latest-release:
    name: Latest release
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout out the codebase
        uses: actions/checkout@v4
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Add Qemu
        uses: docker/setup-qemu-action@v3

      - name: Add Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_REGISTRY_TOKEN }}

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},name-canonical=true
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:latest
            ghcr.io/${{ github.repository }}:latest

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-latest
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
